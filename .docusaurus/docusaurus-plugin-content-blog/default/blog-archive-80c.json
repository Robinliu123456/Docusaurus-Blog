{
  "blogPosts": [
    {
      "id": "/2023/02/06/2023-02/undefined-null",
      "metadata": {
        "permalink": "/blog/2023/02/06/2023-02/undefined-null",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02/2023-02-06-undefined-null.mdx",
        "source": "@site/blog/2023-02/2023-02-06-undefined-null.mdx",
        "title": "null，undefined 的区别？",
        "description": "1. null      表示一个对象是“没有值”的值，也就是值为“空”；",
        "date": "2023-02-06T00:00:00.000Z",
        "formattedDate": "February 6, 2023",
        "tags": [
          {
            "label": "brower",
            "permalink": "/blog/tags/brower"
          }
        ],
        "readingTime": 1.565,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "有出路",
            "title": "2023年想要学好前端的有出路",
            "url": "https://juejin.cn/user/2199503148693176/",
            "imageURL": "https://p3-passport.byteimg.com/img/user-avatar/f82830ca669e2166004e8c0dac1fbb02~180x180.awebp",
            "key": "有出路"
          }
        ],
        "frontMatter": {
          "title": "null，undefined 的区别？",
          "authors": [
            "有出路"
          ],
          "tags": [
            "brower"
          ]
        },
        "nextItem": {
          "title": "浏览器渲染原理解析",
          "permalink": "/blog/浏览器渲染原理解析"
        }
      },
      "content": "1. null      表示一个对象是“没有值”的值，也就是值为“空”；\n 2. undefined     表示一个变量声明了没有初始化(赋值)；\n undefined不是一个有效的JSON，而null是；\n undefined的类型(typeof)是undefined；\n null的类型(typeof)是object；\n \n Javascript将未赋值的变量默认值设为undefined；\n Javascript从来不会将变量设为null。它是用来让程序员表明某个用var声明的变量时没有值的。\n typeof undefined\n    //\"undefined\"\n    undefined :是一个表示\"无\"的原始值或者说表示\"缺少值\"，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined；\n    例如变量被声明了，但没有赋值时，就等于undefined\n typeof null\n    //\"object\"\n    null : 是一个对象(空对象, 没有任何属性和方法)；\n    例如作为函数的参数，表示该函数的参数不是对象；\n - 注意：\n    在验证null时，一定要使用　=== ，因为 == 无法分别 null 和　undefined\n    null == undefined // true\n    null === undefined // false\n 再来一个例子：\n ```\n    null\n    Q：有张三这个人么？\n    A：有！\n    Q：张三有房子么？\n    A：没有！\n \n    undefined\n    Q：有张三这个人么？\n    A：有！\n    Q: 张三有多少岁？\n    A: 不知道（没有被告诉）\n    ```"
    },
    {
      "id": "浏览器渲染原理解析",
      "metadata": {
        "permalink": "/blog/浏览器渲染原理解析",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02/2023-02-06-Analysis-of-browser-rendering-principle/index.mdx",
        "source": "@site/blog/2023-02/2023-02-06-Analysis-of-browser-rendering-principle/index.mdx",
        "title": "浏览器渲染原理解析",
        "description": "1. 首先渲染引擎下载HTML，解析生成DOM Tree",
        "date": "2023-02-06T00:00:00.000Z",
        "formattedDate": "February 6, 2023",
        "tags": [
          {
            "label": "brower",
            "permalink": "/blog/tags/brower"
          }
        ],
        "readingTime": 1.405,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "有出路",
            "title": "2023年想要学好前端的有出路",
            "url": "https://juejin.cn/user/2199503148693176/",
            "imageURL": "https://p3-passport.byteimg.com/img/user-avatar/f82830ca669e2166004e8c0dac1fbb02~180x180.awebp",
            "key": "有出路"
          }
        ],
        "frontMatter": {
          "slug": "浏览器渲染原理解析",
          "title": "浏览器渲染原理解析",
          "authors": [
            "有出路"
          ],
          "tags": [
            "brower"
          ]
        },
        "prevItem": {
          "title": "null，undefined 的区别？",
          "permalink": "/blog/2023/02/06/2023-02/undefined-null"
        },
        "nextItem": {
          "title": "浏览器的内核",
          "permalink": "/blog/浏览器的内核"
        }
      },
      "content": "1. 首先渲染引擎下载HTML，解析生成DOM Tree\n2. 遇到css标签或JS脚本标签就新起线程去下载他们，并继续构建DOM。（其中css是异步下载同步执行）浏览器引擎通过 DOM Tree 和 CSS Rule Tree 构建 Rendering Tree\n3. 通过 CSS Rule Tree 匹配 DOM Tree 进行定位坐标和大小，这个过程称为 Flow 或 Layout 。\n4. 最终通过调用Native GUI 的 API 绘制网页画面的过程称为 Paint 。\n5. 当用户在浏览网页时进行交互或通过 js 脚本改变页面结构时，以上的部分操作有可能重复运行，此过程称为 Repaint 或 Reflow。 重排是指dom树发生结构变化后，需要重新构建dom结构。 重绘是指dom节点样式改变，重新绘制。 重排一定会带来重绘，重绘不一定有重排。\n如何减少浏览器重排：将需要多次重排的元素，position属性设为absolute或fixed，这样此元素就脱离了文档流，它的变化不会影响到其他元素。"
    },
    {
      "id": "浏览器的内核",
      "metadata": {
        "permalink": "/blog/浏览器的内核",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02/2023-02-06-brower-core/index.mdx",
        "source": "@site/blog/2023-02/2023-02-06-brower-core/index.mdx",
        "title": "浏览器的内核",
        "description": "1. Trident内核:IE系列",
        "date": "2023-02-06T00:00:00.000Z",
        "formattedDate": "February 6, 2023",
        "tags": [
          {
            "label": "brower",
            "permalink": "/blog/tags/brower"
          }
        ],
        "readingTime": 0.37,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "有出路",
            "title": "2023年想要学好前端的有出路",
            "url": "https://juejin.cn/user/2199503148693176/",
            "imageURL": "https://p3-passport.byteimg.com/img/user-avatar/f82830ca669e2166004e8c0dac1fbb02~180x180.awebp",
            "key": "有出路"
          }
        ],
        "frontMatter": {
          "slug": "浏览器的内核",
          "title": "浏览器的内核",
          "authors": [
            "有出路"
          ],
          "tags": [
            "brower"
          ]
        },
        "prevItem": {
          "title": "浏览器渲染原理解析",
          "permalink": "/blog/浏览器渲染原理解析"
        },
        "nextItem": {
          "title": "为什么需要前端工程师？",
          "permalink": "/blog/为什么需要前端工程师？"
        }
      },
      "content": "1. Trident内核:IE系列\n2. Gecko内核:Firefox\n3. Webkit内核:Safari\n4. Blink内核：是基于Webkit内核的子项目,使用的浏览器有：Chrome/opera等除IE、Firefox、Safari之外的几乎所有浏览器\n5. 几乎所有国产双内核浏览器（Trident/Blink）如360、猎豹、qq、百度等"
    },
    {
      "id": "为什么需要前端工程师？",
      "metadata": {
        "permalink": "/blog/为什么需要前端工程师？",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-26-welcome/index.md",
        "source": "@site/blog/2021-08-26-welcome/index.md",
        "title": "为什么需要前端工程师？",
        "description": "Docusaurus blogging features are powered by the blog plugin.",
        "date": "2021-08-26T00:00:00.000Z",
        "formattedDate": "August 26, 2021",
        "tags": [
          {
            "label": "facebook",
            "permalink": "/blog/tags/facebook"
          },
          {
            "label": "hello",
            "permalink": "/blog/tags/hello"
          },
          {
            "label": "docusaurus",
            "permalink": "/blog/tags/docusaurus"
          }
        ],
        "readingTime": 0.405,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "有出路",
            "title": "2023年想要学好前端的有出路",
            "url": "https://juejin.cn/user/2199503148693176/",
            "imageURL": "https://p3-passport.byteimg.com/img/user-avatar/f82830ca669e2166004e8c0dac1fbb02~180x180.awebp",
            "key": "有出路"
          }
        ],
        "frontMatter": {
          "slug": "为什么需要前端工程师？",
          "title": "为什么需要前端工程师？",
          "authors": [
            "有出路"
          ],
          "tags": [
            "facebook",
            "hello",
            "docusaurus"
          ]
        },
        "prevItem": {
          "title": "浏览器的内核",
          "permalink": "/blog/浏览器的内核"
        },
        "nextItem": {
          "title": "MDX Blog Post",
          "permalink": "/blog/mdx-blog-post"
        }
      },
      "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
    },
    {
      "id": "mdx-blog-post",
      "metadata": {
        "permalink": "/blog/mdx-blog-post",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-01-mdx-blog-post.mdx",
        "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
        "title": "MDX Blog Post",
        "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
        "date": "2021-08-01T00:00:00.000Z",
        "formattedDate": "August 1, 2021",
        "tags": [
          {
            "label": "docusaurus",
            "permalink": "/blog/tags/docusaurus"
          }
        ],
        "readingTime": 0.175,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "Sébastien Lorber",
            "title": "Docusaurus maintainer",
            "url": "https://sebastienlorber.com",
            "imageURL": "https://github.com/slorber.png",
            "key": "slorber"
          }
        ],
        "frontMatter": {
          "slug": "mdx-blog-post",
          "title": "MDX Blog Post",
          "authors": [
            "slorber"
          ],
          "tags": [
            "docusaurus"
          ]
        },
        "prevItem": {
          "title": "为什么需要前端工程师？",
          "permalink": "/blog/为什么需要前端工程师？"
        },
        "nextItem": {
          "title": "Long Blog Post",
          "permalink": "/blog/long-blog-post"
        }
      },
      "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
    },
    {
      "id": "long-blog-post",
      "metadata": {
        "permalink": "/blog/long-blog-post",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md",
        "source": "@site/blog/2019-05-29-long-blog-post.md",
        "title": "Long Blog Post",
        "description": "This is the summary of a very long blog post,",
        "date": "2019-05-29T00:00:00.000Z",
        "formattedDate": "May 29, 2019",
        "tags": [
          {
            "label": "hello",
            "permalink": "/blog/tags/hello"
          },
          {
            "label": "docusaurus",
            "permalink": "/blog/tags/docusaurus"
          }
        ],
        "readingTime": 2.05,
        "hasTruncateMarker": true,
        "authors": [
          {
            "name": "Endilie Yacop Sucipto",
            "title": "Maintainer of Docusaurus",
            "url": "https://github.com/endiliey",
            "imageURL": "https://github.com/endiliey.png",
            "key": "endi"
          }
        ],
        "frontMatter": {
          "slug": "long-blog-post",
          "title": "Long Blog Post",
          "authors": "endi",
          "tags": [
            "hello",
            "docusaurus"
          ]
        },
        "prevItem": {
          "title": "MDX Blog Post",
          "permalink": "/blog/mdx-blog-post"
        },
        "nextItem": {
          "title": "First Blog Post",
          "permalink": "/blog/first-blog-post"
        }
      },
      "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
    },
    {
      "id": "first-blog-post",
      "metadata": {
        "permalink": "/blog/first-blog-post",
        "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post.md",
        "source": "@site/blog/2019-05-28-first-blog-post.md",
        "title": "First Blog Post",
        "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
        "date": "2019-05-28T00:00:00.000Z",
        "formattedDate": "May 28, 2019",
        "tags": [
          {
            "label": "hola",
            "permalink": "/blog/tags/hola"
          },
          {
            "label": "docusaurus",
            "permalink": "/blog/tags/docusaurus"
          }
        ],
        "readingTime": 0.12,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "Gao Wei",
            "title": "Docusaurus Core Team",
            "url": "https://github.com/wgao19",
            "image_url": "https://github.com/wgao19.png",
            "imageURL": "https://github.com/wgao19.png"
          }
        ],
        "frontMatter": {
          "slug": "first-blog-post",
          "title": "First Blog Post",
          "authors": {
            "name": "Gao Wei",
            "title": "Docusaurus Core Team",
            "url": "https://github.com/wgao19",
            "image_url": "https://github.com/wgao19.png",
            "imageURL": "https://github.com/wgao19.png"
          },
          "tags": [
            "hola",
            "docusaurus"
          ]
        },
        "prevItem": {
          "title": "Long Blog Post",
          "permalink": "/blog/long-blog-post"
        }
      },
      "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
    }
  ]
}